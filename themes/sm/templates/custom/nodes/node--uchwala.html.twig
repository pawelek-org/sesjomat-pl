{# ZMIENNE #}
{% set nr_porzadkowy_sesji = node.field_ref_sesja.entity.field_numer_porzadkowy.0.value|trim %}
{% set nr_porzadkowy_uchwaly = node.field_numer_porzadkowy.0.value|trim %}
{% set data = node.field_ref_sesja.entity.field_data.0.value %}
{% set liczba_obecnych = node.field_count_votes.0.value - node.field_count_nieobecny.0.value %}
{% if node.field_zmieniona_uchwala.0.value is not empty %}
  {% set nr_porzadkowy_zmienianej_uchwaly = node.field_zmieniona_uchwala.entity.field_numer_porzadkowy.0.value|trim %}
  {% set data_zmienianej_uchwaly = node.field_zmieniona_uchwala.entity.field_ref_sesja.entity.field_data.0.value|trim %}
  {% set url_zmiany = path('entity.node.canonical', {'node': node.field_zmieniona_uchwala.entity.id })  %}
{% endif %}

{#===============================#}
{# START TEASER #}{% if teaser %}
{#===============================#}

TEASER

{#===============================#}
{# END TEASER #}{% endif %}
{#===============================#}

{#===============================#}
{# START PAGE #}{% if page %}
{#===============================#}

<div class="divider"></div>
{# TYP UCHWAŁY #}
{{ content.field_typ_uchwaly }}

{# NAZWA UCHWAŁY #}
<div class="hero hero-sm bg-secondary">
  <div class="hero-body">
    <div class="columns">
      <div class="column col-12">
      <div class="text-bold">
        <p><i class="icon icon-bookmark"></i> {{ content.field_nazwa_uchwaly|render|trim }}</p>
      </div>
      </div>
    </div>
  </div>
</div>

{# GŁOSOWANIE #}
<h5 class="s-subtitle"><i class="icon icon-people"></i> Przebieg głosowania w trakcie sesji</h5>
{% if node.field_typ_glosowania.0.value == 0 %}
  {% include '@sm/custom/nodes/glosowanie.html.twig' %}
  <div class="divider"></div>
{% endif %}
<div class="columns">
  <div class="column col-12">
    <ul>
      <li><a title="Odnośnik do sesji nr {{ nr_porzadkowy_sesji }}" href="/sesje/{{ nr_porzadkowy_sesji }}" rel="nofollow">Sesja nr {{ nr_porzadkowy_sesji }}</a> odbyła się w dniu {{ data }}.</li>
      <li>Głosowanie uchwały było {{ content.field_typ_glosowania|render|trim|lower }}.</li>
      <li>Z tej sesji dostępny jest <a title="Odnośnik do protokołu nr {{ nr_porzadkowy_sesji }}" href="/protokoly/{{ nr_porzadkowy_sesji }}" rel="nofollow">protokół nr {{ nr_porzadkowy_sesji }}</a>.</li>
      {% if url_zmiany %}<li>Niniejsza uchwała zmienia <a title="Odnośnik do zmienionej uchwały" href="{{ url_zmiany }}" rel="nofollow">uchwałę nr {{ nr_porzadkowy_zmienianej_uchwaly }}</a> z dnia {{ data_zmienianej_uchwaly }}.</li>{% endif %}
      <li>Za przyjęciem uchwały głosowało {{ node.field_count_za.0.value }} radnych spośród {{ liczba_obecnych }} obecnych w trakcie głosowania.</li>
    </ul>
  </div>
</div>

{# ODNOŚNIKI ZEWNĘTRZNE #}
<h5 class="s-subtitle"><i class="icon icon-share"></i> Odnośniki do źródeł</h5>
<div class="columns">
  <div class="column col-auto col-sm-12">
    {# {{ content.field_href_source|render|striptags|trim }} #}
    <a class="btn btn-sm" title="Odnośnik do BIP" href="{{ node.field_href_source.0.value }}" target="_blank" rel="nofollow"><i class="icon icon-forward"></i> Biuletyn Informacji Publicznej</a>
  </div>
  {% if node.field_nr_w_dz_wojewody.0.value is not empty %}
    {% set wojewoda = 'http://edziennik.poznan.uw.gov.pl/#/legalact/' ~ node.field_nr_w_dz_wojewody.0.value|trim ~ '/' %}
    <div class="column col-auto col-sm-12">
      <a class="btn btn-sm" title="Odnośnik do DU" href="{{ wojewoda }}" target="_blank" rel="nofollow"><i class="icon icon-forward"></i> Dziennik Urzędowy woj. Wielkopolskiego</a>
    </div>
  {% endif %}
</div>

{# LISTA UCHWAŁ ZMIENIAJĄCYCH #}
{# https://www.drupal.org/docs/8/modules/twig-tweak/cheat-sheet #}
{% set ile_uchwal_zmieniajacych = drupal_view_result('zmiany_uchwaly', 'block_1', node.id)|length %}
{% if ile_uchwal_zmieniajacych > 0 %}
  {% set uchwaly_zmieniajace = drupal_view('zmiany_uchwaly', 'block_1', node.id) %}
  <h5 class="s-subtitle"><i class="icon icon-link"></i> Lista uchwał zmieniających</h5>
  <div class="accordion">
    <input type="checkbox" id="accordion-1" name="accordion-checkbox" hidden>
    <label class="accordion-header" for="accordion-1">
      <i class="icon icon-arrow-right mr-1"></i>
      kliknij aby rozwinąć listę
    </label>
    <div class="accordion-body">
      <p>Ilość uchwał zmieniających uchwałę nr {{ nr_porzadkowy_uchwaly }} wynosi: <strong>{{ ile_uchwal_zmieniajacych }}</strong>.</p>
      {{ uchwaly_zmieniajace }}
    </div>
  </div>
{% endif %}

{# TREŚĆ UCHWAŁY #}
<h5 class="s-subtitle"><i class="icon icon-edit"></i> Treść uchwały</h5>
<div class="columns">
  <div class="column col-12">
    {{ content.body }}
  </div>
</div>

{# STOPKA #}
<div class="accordion">
  <input type="checkbox" id="accordion-2" name="accordion-checkbox" hidden>
  <label class="accordion-header" for="accordion-2">
    <i class="icon icon-arrow-right mr-1"></i>
    Historia zmian
  </label>
  <div class="accordion-body">
    <div class="container">
      <div class="columns">
        <div class="column col-4 col-sm-12"><span class="text-gray">Data wprowadzenia<br>{{ node.created.value|date('Y-m-d') }}</span></div>
        <div class="column col-4 col-sm-12"><span class="text-gray">Data ostatniej aktualizacji<br>{{ node.published.value|date('Y-m-d') }}</span></div>
        <div class="column col-4 col-sm-12"><span class="text-gray">Odnośnik do źródła<br><a href="{{ node.field_href_source.0.value }}" rel="nofollow" target="_blank" title="Odnośnik do źródła">Kliknij</a></span></div>
      </div>
    </div>
  </div>
</div>


{#===============================#}
{# END PAGE #}{% endif %}
{#===============================#}

{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}